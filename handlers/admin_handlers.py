import logging
from aiogram import Router, Bot
from aiogram.types import Message
from aiogram.filters.command import Command
from aiogram_dialog import DialogManager, StartMode

from filters.is_admin import IsAdminFilter
from database.methods.statistics import fetch_statistics
from database.methods.user import fetch_users
from states.states import AdminDialogStates

admin_router = Router()

async def show_stats(dialog_manager: DialogManager, **kwargs) -> dict:
    bot: Bot = dialog_manager.middleware_data.get("bot")  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏–∑ middleware_data
    pool = getattr(bot, "db_pool", None)  # –ü–æ–ª—É—á–∞–µ–º –ø—É–ª —á–µ—Ä–µ–∑ –∞—Ç—Ä–∏–±—É—Ç –±–æ—Ç–∞
    bot_id = bot.id  # –ü–æ–ª—É—á–∞–µ–º –∞–π–¥–∏—à–Ω–∏–∫ –±–æ—Ç—è—Ä—ã

    stats = await fetch_statistics(pool, bot_id)
    return {
        "total_users": stats.get("total_users", 0),
        "today_users": stats.get("today_users", 0),
        "total_requests": stats.get("total_requests", 0),
        "today_requests": stats.get("today_requests", 0),
    }


async def show_users(dialog_manager: DialogManager, **kwargs) -> dict:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –¥–∏–∞–ª–æ–≥–µ.
    """
    bot = dialog_manager.middleware_data.get("bot")  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏–∑ middleware_data
    pool = getattr(bot, "db_pool", None)  # –ü–æ–ª—É—á–∞–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
    users = await fetch_users(pool)    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users_text = ""
    for user in users:
        users_text += (
            f"üë§ Username: {user['username'] or '‚Äî'}\n"
            f" ‚îú ID Telegram: {user['id_telegram']}\n"
            f" ‚îú –ü—Ä–µ–º–∏—É–º: {'–î–∞' if user['is_premium'] else '–ù–µ—Ç'}\n"
            f" ‚îú –ü–æ–¥–ø–∏—Å–∫–∞ —Å: {user['subscription_start'].strftime('%d-%m-%Y') if user['subscription_start'] else '‚Äî.‚Äî.‚Äî'}\n"
            f" ‚îî –ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ: {user['subscription_end'].strftime('%d-%m-%Y') if user['subscription_end'] else '‚Äî.‚Äî.‚Äî'}\n\n"
        )
    return {"users_text": users_text}


# –≤—ã–∑–æ–≤ –¥–∏–∞–ª–æ–≥–∞ –∞–¥–º–∏–Ω–∞
@admin_router.message(Command("admin"), IsAdminFilter)
async def admin_panel(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(AdminDialogStates.admin_menu, mode=StartMode.RESET_STACK)
